package{	import flash.display.Sprite;	import com.physicscodes.objects.Ball;	import com.physicscodes.objects.Wall;		import com.physicscodes.math.Vector2D;			public class Molecules extends Sprite{		private var _numBalls:uint = 20;					public function Molecules():void{			init();		}		private function init():void{			var balls:Array=new Array();				for(var i:uint = 0; i < _numBalls; i++){				var radius:Number = Math.random()*20 + 5;				var mass:Number = 0.01*Math.pow(radius,3);				var ball:Ball = new Ball(radius,0x666600,mass);				ball.pos2D = new Vector2D( Math.random()*(stage.stageWidth-2*radius) +radius, Math.random()*(stage.stageHeight-2*radius)+radius );				ball.velo2D = new Vector2D(((Math.random()-0.5)*100),((Math.random()-0.5)*100));				//ball.velo2D = new Vector2D(((Math.random()-0.5)*80),((Math.random()-0.5)*80));				addChild(ball);				balls.push(ball);		    }							var walls:Array=new Array();							var wall1:Wall=new Wall(new Vector2D(stage.stageWidth,0),new Vector2D(0,0));            addChild(wall1);			walls.push(wall1);			var wall2:Wall=new Wall(new Vector2D(stage.stageWidth,stage.stageHeight),new Vector2D(stage.stageWidth,0));			            addChild(wall2);			walls.push(wall2);			var wall3:Wall=new Wall(new Vector2D(0,stage.stageHeight),new Vector2D(stage.stageWidth,stage.stageHeight));			addChild(wall3);			walls.push(wall3);			var wall4:Wall=new Wall(new Vector2D(0,0),new Vector2D(0,stage.stageHeight));            addChild(wall4);			walls.push(wall4);						/*			var wall5:Wall=new Wall(new Vector2D(250,150),new Vector2D(350,250));            addChild(wall5);			walls.push(wall5);						*/								var collider:MoleculesCollider = new MoleculesCollider(balls,walls);			collider.startTime(10);		}	}}